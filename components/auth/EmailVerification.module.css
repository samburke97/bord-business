/* components/auth/EmailVerification.module.css */
.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
}

.header {
  position: relative;
  z-index: 10;
}

.content {
  flex: 1;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: 48px 1rem 2rem 1rem; /* 48px from top as specified */
  min-height: calc(100vh - 80px); /* Account for header */
}

.formContainer {
  width: 100%;
  max-width: 600px; /* Increased even more to accommodate the full text */
  display: flex;
  flex-direction: column;
  gap: 32px; /* 32px gap as specified */
}

/* Ensure TitleDescription doesn't constrain the text */
.formContainer :global(.titleDescription) {
  width: 100%;
  max-width: none;
}

.formContainer :global(.titleDescription) p {
  white-space: nowrap;
  overflow: visible;
  text-overflow: clip;
}

.formSection {
  display: flex;
  flex-direction: column;
  gap: 32px;
}

.codeInputContainer {
  display: flex;
  justify-content: space-between;
  gap: 12px; /* Back to 12px as in Figma */
  width: 100%;
}

/* Shake animation for wrong code */
.shake {
  animation: shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-8px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(8px);
  }
}

.codeInput {
  display: flex;
  padding: 8px 12px; /* Reduced vertical padding from 12px to 8px */
  justify-content: center;
  align-items: center;
  flex: 1 0 0;
  min-width: 0;
  border-radius: 8px;
  border: 1px solid #d9dbdb;
  background: #fff;
  font-size: 24px;
  font-weight: 600;
  text-align: center;
  color: #1f2937;
  transition: all 0.2s ease;
  outline: none;
}

.codeInput:focus {
  border-color: var(--primary-primary, #10b981);
  outline: none;
}

/* When input has a value (number is entered) - keep green */
.codeInput:not(:placeholder-shown),
.codeInput[data-filled="true"] {
  border-color: var(--primary-primary, #10b981);
}

/* When input loses focus but has no value - back to grey */
.codeInput:not(:focus)[data-filled="false"] {
  border-color: #d9dbdb;
}

.codeInput:disabled {
  background-color: #f9fafb;
  cursor: not-allowed;
}

.codeInputError {
  border-color: #ef4444;
}

.codeInputError:focus {
  border-color: #ef4444;
  outline: none;
}

.errorMessage {
  color: #ef4444;
  font-size: 14px;
  text-align: center;
  margin-top: -16px; /* Reduce gap when error is shown */
}

.buttonContainer {
  display: flex;
  flex-direction: column;
  gap: 12px; /* Reduced gap between buttons */
}

/* Override button heights to make them less tall */
.buttonContainer :global(.button) {
  height: 48px; /* Reduced height */
  min-height: 48px;
}

/* Mobile responsiveness */
@media (max-width: 480px) {
  .content {
    padding: 48px 1rem 1rem 1rem; /* Keep 48px from top */
  }

  .formContainer {
    max-width: 100%;
  }

  .codeInput {
    font-size: 20px;
    padding: 6px 8px; /* Reduced mobile padding too */
  }

  .codeInputContainer {
    gap: 8px;
  }
}

/* Tablet and up */
@media (min-width: 768px) {
  .content {
    padding: 48px 2rem 3rem 2rem; /* Keep 48px from top */
  }
}
